package {{ package_name }}

import (
	"encoding/json"
	{% if requires_optional %}"github.com/markphelps/optional"{% endif %}
	{% if params_struct %}"github.com/google/go-querystring/query"{% endif %}	
)

{% if params_struct %}
type {{ params_struct_name }} {{ params_struct }}
{% endif %}

{% if chunks_struct %}
type {{ chunks_struct_name }} {{ chunks_struct }}
{% endif %}

type {{ struct_name }} {{ struct }}

{% for note in notes %}
// {{ note }}{% endfor %}
func (api *{{ client_struct_name }}) {{ method_name }}({% if params_struct %}params {{ params_struct_name }}{% endif %}) (*{{ struct_name }}, error) {
	{% if params_struct %}paramsString, err := query.Values(params)
	if err != nil {
		return nil, err
	}

	url := "{{ endpoint }}?" + paramsString.Encode()

	{% else %}url := "{{ endpoint }}"
	{% endif %}

	respBody, err := api.Client.Get(url)
	if err != nil {
		return nil, err
	}

	response := &{{ struct_name }}{}
	err = json.NewDecoder(respBody).Decode(response)
	if err != nil {
		return nil, err
	}

	return response, nil
}
